# 标签页图标
favicon:
  type: "image/x-icon"
  href: "/favicon.ico"

# canvas 动态背景
canvas_dust: true

# 默认颜色模式 dark / dark-only / light / light-only / auto
# dark 暗色模式
# light 亮色模式
# -only 锁定颜色模式
# auto 跟随系统
color: dark

build_time: false # 是否开启构建时间显示，开启后会在生成的站点配置中添加 build_time 字段，值为 UTC 时间字符串

# <body> 背景图片链接
background_image:
  dark: https://ak.hypergryph.com/assets/index/images/ak/pc/bk.jpg # 暗色模式
  light: /img/bk.jpg # 亮色模式

# 导航栏
menu:
  Home: ""
  # About: about/
  # Contact: contact/
  Archives: archives/

# 侧边栏
aside:
  in_left: false # 侧边栏在左 true / false
  logo: https://ak.hypergryph.com/assets/index/images/ak/pc/faction/1.png #图片链接，建议 1:1 比例
  logo_margin: 0 # 为 Logo 图片设置 CSS margin 属性值，参考：https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin
  logo_border_radius: 0 # 为 Logo 图片设置 CSS border-radius 属性值，参考：https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-radius
  dr: / # 侧边栏 Dr. 链接
  icp: # ICP 备案号，与版权声明相同，但会链接到 https://beian.miit.gov.cn/
  copyright: # 版权声明、备案号等，可自定义键值，不想显示则留空
    # 萌:
    #   萌ICP备XXXXXXXX号: https://icp.gov.moe/?keyword=XXXXXXXX
    # copyright:
    #   CC BY-NC-SA 4.0: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh

# 社交链接
# 格式：链接 || 图标
# 图标支持链接与 FontAwesome
# FontAwesome 格式可用图标参考：https://fontawesome.com/icons
social:
  # GitHub: https://github.com/yourname || fab fa-github
  # E-Mail: mailto:yourname@gmail.com || fa fa-envelope
  # BiliBili: https://space.bilibili.com/0000000 || fa-brands fa-bilibili
  # Weibo: https://weibo.com/yourname || fab fa-weibo
  # Zhihu: https://www.zhihu.com/people/yourname || fab fa-zhihu

# post 文章页面配置；true / false
post:
  date: true # 是否显示发布日期
  updated: true # 是否显示修改日期
  excerpt: true # 是否在文章中显示摘要内容（<!-- more--> 以上的内容）
  # 文章末显示打赏二维码
  reward:
    # 支付宝 | Alipay: img/Alipay.png
    # 微信 | Wechat: img/WeChat.png
  # 以下两项依赖 hexo-wordcount，请参阅 README 开启
  count: false # 是否显示字数统计
  time: false # 是否显示预计阅读时长
  code_fold: 15 # 当代码小于等此行数时默认展开，设为 -1 则全部展开

# 文章内目录
toc:
  list_number: true # true / false ；是否显示编号
  max_depth: 6 # 最大目录深度
  min_depth: 1 # 最小目录深度

# 归档页
archives:
  categories_count: true # 是否显示分类总数
  tags_count: true # 是否显示标签总数

# 搜索
search:
  enable: true
  content: true # 若为 false，仅可搜索标题及 metadata
  preload: false # 自动加载搜索数据
  # 设为 post 时，仅可搜索 post 页面
  # 设为 page 时，仅可搜索非 post 页面
  # 设为 all 时，可搜索全部页面
  field: post
  # 设为 html 时，依据 html 文件生成
  # 设为 striptags 时，滤除 html tag
  # 设为 raw 时，依据 markdown 源文件生成
  format: striptags

# 背景音乐
bgm:
  enable: true
  autoplay: true
  loop: true
  src: /audio/bgm.mp3

# Vercount
# 详见 https://vercount.one/
vercount:
  enable: false
  sitePV: true # 站点总访问量
  siteUV: true # 站点访客数
  pagePV: true # 页面访问量

# Valine
# 详见 https://valine.js.org
valine:
  enable: false
  app_id: # APP ID
  app_key: # APP KEY
  server_url: # APP DOMAIN（LeanCloud 国际版）
  avatar: 'retro' # (''/mp/identicon/monsterid/wavatar/robohash/retro/hide)
  avatar_cdn: 'https://dn-qiniu-avatar.qbox.me/avatar/' # 自定义 avatar cdn

# gitalk
# 详见 https://github.com/gitalk/gitalk
gitalk:
  enable: false
  client_id: # GitHub 应用 Client ID
  client_secret: # GitHub 应用 Client Secret
  repo: # 用于存放评论数据的 GitHub 仓库
  owner: # 该 GitHub 仓库所有者
  admin: [] # 具有写该 GitHub 仓库权限的用户，例如: [adminA,adminB]
  id: location.pathname # (可选) 页面的唯一标识

# Waline
# 详情: https://waline.js.org/
waline:
  enable: false
  server_url: #Server_Url

#Artalk
#详见：https://artalk.js.org/
artalk:
  enable: false
  server: https://artalk.server.instance/ # 你的 Artalk 服务地址
  site_name: My Blog # 站点名称，用于区分多个站点（可选）

# Utterances
# 详见: https://utteranc.es
utterances:
  enable: false
  repo: # Github 仓库所有者和名称
  issue_term: pathname # 可选值: pathname | url | title | og:title
  theme: github-light # 可选值: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light

# Giscus
# 详见: https://giscus.app
giscus:
  enable: false
  repo: # Github 仓库所有者和名称，例如: octocat/Hello-World
  repo_id: # 仓库 ID，可在 giscus 页面获取
  category: # discussion 分类名称
  category_id: # 分类 ID，可在 giscus 页面获取
  mapping: pathname # 页面 ↔️ discussion 映射关系，可选值: pathname | url | title | og:title | specific | number
  term: # 当 mapping 为 specific 时使用，指定的字符串
  discussion_number: # 当 mapping 为 number 时使用，指定的 discussion 号码
  strict: 0 # 是否启用严格标题匹配 0 | 1
  reactions_enabled: 1 # 是否启用主帖子上的反应 0 | 1
  emit_metadata: 0 # 是否输出 discussion 的元数据 0 | 1
  input_position: bottom # 评论输入框位置，可选值: top | bottom
  
  # 主题配置 - 三种配置方式任选其一：
  # 方式一：使用单一主题（固定主题，不随网站主题切换）
  theme: preferred_color_scheme # 主题，可选值详见 README.md 或 giscus 官网
  
  # 方式二：分别设置明暗主题（推荐，支持主题自动切换）
  # theme_light: light # 亮色模式主题
  # theme_dark: dark # 暗色模式主题
  
  # 方式三：使用自定义 CSS（高级用法）
  # theme: https://your-domain.com/path/to/custom-giscus-theme.css
  
  lang: zh-CN # 语言，可选值: de | en | es | fr | gsw | id | it | ja | ko | pl | ro | ru | tr | vi | zh-CN | zh-TW
  loading: lazy # 懒加载，可选值: lazy | 留空表示不使用懒加载
  crossorigin: anonymous # CORS 设置，可选值: anonymous | use-credentials | 留空
  
  # 高级配置选项
  description: # 自定义 discussion 描述
  origin: # 限制域名，用于安全控制
  backlink: # 自定义返回链接，用于 giscus:backlink meta 标签

# 图表支持
mermaid:
  enable: true
  version: "10.5.0"

# pjax 支持
pjax:
  enable: true

# 公式前端渲染
mathjax:
  enable: false
  version: "2.6.1"

# 在 `<head>` 标签内引入 CSS 样式表
# 支持直接引入短片段，用 "{ }" 包裹（包括引号），例： - "{a {color: #2bf}}"
stylesheets:

# 在 `<body>` 尾部引入 JavaScript 脚本
# 支持直接引入短片段，用 "{ }" 包裹（包括引号），例： - "{var test='test'}"
scripts:
